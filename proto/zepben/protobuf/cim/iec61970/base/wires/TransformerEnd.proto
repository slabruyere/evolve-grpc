// Copyright 2020 Zeppelin Bend Pty Ltd
// This file is part of evolve-grpc.
//
// evolve-grpc is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// evolve-grpc is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with evolve-grpc.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
option csharp_namespace = "Zepben.Protobuf.CIM.IEC61970.Base.Wires";
package zepben.protobuf.cim.iec61970.base.wires;

import "zepben/protobuf/cim/iec61970/base/core/IdentifiedObject.proto";

/**
 * A conducting connection point of a power transformer. It corresponds to a physical transformer winding terminal.
 * In earlier CIM versions, the TransformerWinding class served a similar purpose, but this class is more flexible
 * because it associates to terminal but is not a specialization of ConductingEquipment.
 */
message TransformerEnd {

    /**
     * IdentifiedObject fields for this TransformerEnd.
     */
    core.IdentifiedObject io = 1;

    /**
     * The terminal of the transformer that this end is associated with
     */
    string terminalMRID = 2;

    /**
     * Base voltage of the transformer end.  This is essential for PU calculation.
     */
    string baseVoltageMRID = 3;

    /**
     * This TransformerEnds number.
     */
    uint32 endNumber = 4;

    /**
     * The tap changer associated with this PowerTransformerEnd
     */
    string ratioTapChangerMRID = 9;

    /**
     * (for Yn and Zn connections) True if the neutral is solidly grounded.
     */
    bool grounded = 10;

    /**
     * (for Yn and Zn connections) Resistance part of neutral impedance where 'grounded' is true.
     */
    double rGround = 11;

    /**
     * (for Yn and Zn connections) Reactive part of neutral impedance where 'grounded' is true.
     */
    double xGround = 12;


}
