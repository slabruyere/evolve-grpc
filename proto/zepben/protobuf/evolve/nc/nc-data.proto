// Copyright 2020 Zeppelin Bend Pty Ltd
// This file is part of evolve-grpc.
//
// evolve-grpc.is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// evolve-grpc.is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with evolve-grpc.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.nc";
option csharp_namespace = "Zepben.Protobuf.NC";
package zepben.protobuf.evolve.nc;

import "google/protobuf/any.proto";
import "zepben/protobuf/evolve/cim/iec61968/assetinfo/CableInfo.proto";
import "zepben/protobuf/evolve/cim/iec61968/assetinfo/OverheadWireInfo.proto";
import "zepben/protobuf/evolve/cim/iec61968/assets/AssetOwner.proto";
import "zepben/protobuf/evolve/cim/iec61968/common/Organisation.proto";
import "zepben/protobuf/evolve/cim/iec61968/common/Location.proto";
import "zepben/protobuf/evolve/cim/iec61968/metering/Meter.proto";
import "zepben/protobuf/evolve/cim/iec61968/metering/UsagePoint.proto";
import "zepben/protobuf/evolve/cim/iec61968/operations/OperationalRestriction.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/auxiliaryequipment/FaultIndicator.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/BaseVoltage.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/ConnectivityNode.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/Feeder.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/GeographicalRegion.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/Site.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/SubGeographicalRegion.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/Substation.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/core/Terminal.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/AcLineSegment.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Breaker.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Disconnector.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/EnergyConsumer.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/EnergyConsumerPhase.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/EnergySource.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/EnergySourcePhase.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Fuse.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Jumper.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Junction.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/LinearShuntCompensator.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/PerLengthSequenceImpedance.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/PowerTransformer.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/PowerTransformerEnd.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/RatioTapChanger.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/Recloser.proto";
import "zepben/protobuf/evolve/cim/iec61970/infiec61970/feeder/Circuit.proto";
import "zepben/protobuf/evolve/cim/iec61970/infiec61970/feeder/Loop.proto";
import "zepben/protobuf/evolve/cim/iec61968/assets/Pole.proto";
import "zepben/protobuf/evolve/cim/iec61968/assets/Streetlight.proto";

// A simplified representation of a geographical region for requesting the network hierarchy.
message NetworkHierarchyGeographicalRegion {
    string mRID = 1;
    string name = 2;
    repeated string subGeographicalRegionMrids = 3;
}

// A simplified representation of a sub geographical region for requesting the network hierarchy.
message NetworkHierarchySubGeographicalRegion {
    string mRID = 1;
    string name = 2;
    repeated string substationMrids = 3;
}

// A simplified representation of a substation for requesting the network hierarchy.
message NetworkHierarchySubstation {
    string mRID = 1;
    string name = 2;
    repeated string feederMrids = 3;
}

// A simplified representation of a feeder for requesting the network hierarchy.
message NetworkHierarchyFeeder {
    string mRID = 1;
    string name = 2;
}

// Represents a group of very closely related Identified objects that need to be grouped together so a consistent and valid
// model can be constructed. For example a piece of ConductingEquipment would be the 'identifiedObject' and it's associated
// terminals would be in 'ownedIdentifiedObject'
message IdentifiedObjectGroup {
    NetworkIdentifiedObject identifiedObject = 1;
    repeated NetworkIdentifiedObject ownedIdentifiedObject = 2;
}

// The set of leaf identified objects that the network service manages.
message NetworkIdentifiedObject {
    oneof identifiedObject {
        zepben.protobuf.evolve.cim.iec61968.assetinfo.CableInfo cableInfo = 1;
        zepben.protobuf.evolve.cim.iec61968.assetinfo.OverheadWireInfo overheadWireInfo = 2;
        zepben.protobuf.evolve.cim.iec61968.assets.AssetOwner assetOwner = 3;
        zepben.protobuf.evolve.cim.iec61968.common.Organisation organisation = 4;
        zepben.protobuf.evolve.cim.iec61968.common.Location location = 5;
        zepben.protobuf.evolve.cim.iec61968.metering.Meter meter = 6;
        zepben.protobuf.evolve.cim.iec61968.metering.UsagePoint usagePoint = 7;
        zepben.protobuf.evolve.cim.iec61968.operations.OperationalRestriction operationalRestriction = 8;
        zepben.protobuf.evolve.cim.iec61970.base.auxiliaryequipment.FaultIndicator faultIndicator = 9;
        zepben.protobuf.evolve.cim.iec61970.base.core.BaseVoltage baseVoltage = 10;
        zepben.protobuf.evolve.cim.iec61970.base.core.ConnectivityNode connectivityNode = 11;
        zepben.protobuf.evolve.cim.iec61970.base.core.Feeder feeder = 12;
        zepben.protobuf.evolve.cim.iec61970.base.core.GeographicalRegion geographicalRegion = 13;
        zepben.protobuf.evolve.cim.iec61970.base.core.Site site = 14;
        zepben.protobuf.evolve.cim.iec61970.base.core.SubGeographicalRegion subGeographicalRegion = 15;
        zepben.protobuf.evolve.cim.iec61970.base.core.Substation substation = 16;
        zepben.protobuf.evolve.cim.iec61970.base.core.Terminal terminal = 17;
        zepben.protobuf.evolve.cim.iec61970.base.wires.AcLineSegment acLineSegment = 18;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Breaker breaker = 19;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Disconnector disconnector = 20;
        zepben.protobuf.evolve.cim.iec61970.base.wires.EnergyConsumer energyConsumer = 21;
        zepben.protobuf.evolve.cim.iec61970.base.wires.EnergyConsumerPhase energyConsumerPhase = 22;
        zepben.protobuf.evolve.cim.iec61970.base.wires.EnergySource energySource = 23;
        zepben.protobuf.evolve.cim.iec61970.base.wires.EnergySourcePhase energySourcePhase = 24;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Fuse fuse = 25;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Jumper jumper = 26;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Junction junction = 27;
        zepben.protobuf.evolve.cim.iec61970.base.wires.LinearShuntCompensator linearShuntCompensator = 28;
        zepben.protobuf.evolve.cim.iec61970.base.wires.PerLengthSequenceImpedance perLengthSequenceImpedance = 29;
        zepben.protobuf.evolve.cim.iec61970.base.wires.PowerTransformer powerTransformer = 30;
        zepben.protobuf.evolve.cim.iec61970.base.wires.PowerTransformerEnd powerTransformerEnd = 31;
        zepben.protobuf.evolve.cim.iec61970.base.wires.RatioTapChanger ratioTapChanger = 32;
        zepben.protobuf.evolve.cim.iec61970.base.wires.Recloser recloser = 33;
        zepben.protobuf.evolve.cim.iec61970.infiec61970.feeder.Circuit circuit = 34;
        zepben.protobuf.evolve.cim.iec61970.infiec61970.feeder.Loop loop = 35;
        zepben.protobuf.evolve.cim.iec61968.assets.Pole pole = 36;
        zepben.protobuf.evolve.cim.iec61968.assets.Streetlight streetlight = 37;

        google.protobuf.Any other = 999;
    }
}
