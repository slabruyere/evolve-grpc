// Copyright 2020 Zeppelin Bend Pty Ltd
// This file is part of evolve-grpc.
// 
// evolve-grpc is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// evolve-grpc is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with evolve-grpc.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
option csharp_namespace = "Zepben.Protobuf.CIM.IEC61970.Base.Wires";
package zepben.protobuf.evolve.cim.iec61970.base.wires;

import "zepben/protobuf/evolve/cim/iec61970/base/wires/PhaseShuntConnectionKind.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/RegulatingCondEq.proto";

/**
 * A shunt capacitor or reactor or switchable bank of shunt capacitors or reactors. A section of a shunt compensator is an individual
 * capacitor or reactor.  A negative value for reactivePerSection indicates that the compensator is a reactor. ShuntCompensator is a
 * single terminal device.  Ground is implied.
 */
message ShuntCompensator {

    /**
     * The RegulatingConductingEquipment fields for this ShuntCompensator.
     */
    RegulatingCondEq rce = 1;

    /**
     * Shunt compensator sections in use.
     * Starting value for steady state solution. Non integer values are allowed to support continuous variables.
     * The reasons for continuous value are to support study cases where no discrete shunt compensators has yet been
     * designed, a solutions where a narrow voltage band force the sections to oscillate or accommodate for a continuous
     * solution as input.
     */
    double sections = 2;

    /**
     * Used for Yn and Zn connections. True if the neutral is solidly grounded.
     */
    bool grounded = 3;

    /**
     * The voltage at which the nominal reactive power may be calculated. This should normally be within 10% of the voltage at which the capacitor is connected to the network.
     */
    int32 nomU = 4;

    /**
     * The type of phase connection, such as wye or delta.
     */
    PhaseShuntConnectionKind.Enum phaseConnection = 5;

}
