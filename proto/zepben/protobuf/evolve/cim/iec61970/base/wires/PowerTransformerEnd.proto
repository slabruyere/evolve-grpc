// Copyright 2020 Zeppelin Bend Pty Ltd
// This file is part of evolve-grpc.
// 
// evolve-grpc is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// evolve-grpc is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with evolve-grpc.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
option csharp_namespace = "Zepben.Protobuf.CIM.IEC61970.Base.Wires";
package zepben.protobuf.evolve.cim.iec61970.base.wires;

import "zepben/protobuf/evolve/cim/iec61970/base/wires/TransformerEnd.proto";
import "zepben/protobuf/evolve/cim/iec61970/base/wires/WindingConnection.proto";

/**
 * A PowerTransformerEnd is associated with each Terminal of a PowerTransformer.
 * The impedance values r, r0, x, and x0 of a PowerTransformerEnd represents a star equivalent as follows
 * <p>
 * 1) for a two Terminal PowerTransformer the high voltage PowerTransformerEnd has non zero values on r, r0, x, and x0
 *    while the low voltage PowerTransformerEnd has zero values for r, r0, x, and x0.
 * 2) for a three Terminal PowerTransformer the three PowerTransformerEnds represents a star equivalent with each leg in
 *    the star represented by r, r0, x, and x0 values.
 * 3) for a PowerTransformer with more than three Terminals the PowerTransformerEnd impedance values cannot be used.
 *    Instead use the TransformerMeshImpedance or split the transformer into multiple PowerTransformers.
 */
message PowerTransformerEnd {

    /**
     * IdentifiedObject fields for this PowerTransformerEnd.
     */
    TransformerEnd te = 1;

    /**
     * The power transformer of this power transformer end.
     */
    string powerTransformerMRID = 2;

    /**
     * Normal apparent power rating. The attribute shall be a positive value. For a two-winding transformer the values
     * for the high and low voltage sides shall be identical.
     */
    int32 ratedS = 3;

    /**
     * Rated voltage: phase-phase for three-phase windings, and either phase-phase or phase-neutral for single-phase windings.
     * A high voltage side, as given by TransformerEnd.endNumber, shall have a ratedU that is greater or equal than
     * ratedU for the lower voltage sides
     */
    int32 ratedU = 4;

    /**
     * Resistance (star-model) of the transformer end.
     * The attribute shall be equal or greater than zero for non-equivalent transformers.
     */
    double r = 5;

    /**
     * Positive sequence series reactance (star-model) of the transformer end.
     */
    double x = 6;

    /**
     * Zero sequence series resistance (star-model) of the transformer end.
     */
    double r0 = 7;

    /**
     * Zero sequence series reactance of the transformer end.
     */
    double x0 = 8;

    /**
     * Kind of connection.
     */
    winding.WindingConnection connectionKind = 9;

    /**
     * Magnetizing branch susceptance (B mag).  The value can be positive or negative.
     */
    double b = 10;

    /**
     * Zero sequence magnetizing branch susceptance.
     */
    double b0 = 11;

    /**
     * Magnetizing branch conductance.
     */
    double g = 12;

    /**
     * Zero sequence magnetizing branch conductance (star-model).
     */
    double g0 = 13;

    /**
    * Terminal voltage phase angle displacement where 360 degrees are represented with clock hours.
    * The valid values are 0 to 11. For example, for the secondary side end of a transformer with vector group
    * code of 'Dyn11', specify the connection kind as wye with neutral and specify the phase angle of the clock as 11.
    * The clock value of the transformer end number specified as 1, is assumed to be zero.
    * Note the transformer end number is not assumed to be the same as the terminal sequence number.
    */
    int32 phaseAngleClock = 14;

}
